{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samsung\\\\marketaccessnow\\\\src\\\\pages\\\\DrugPriceHistory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DrugPriceHistory() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [ingredientCode, setIngredientCode] = useState(\"\");\n  const [filteredData, setFilteredData] = useState([]);\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    setSelectedFile(file);\n  };\n  const handleProcess = () => {\n    if (!selectedFile || !ingredientCode) {\n      alert(\"파일과 주성분코드를 입력해주세요.\");\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, {\n        type: \"array\"\n      });\n      const sheetName = workbook.SheetNames[0];\n      const sheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(sheet);\n\n      // 주성분코드 필터링\n      const filtered = jsonData.filter(row => row[\"주성분코드\"] === ingredientCode).sort((a, b) => Number(b[\"적용개시일자\"]) - Number(a[\"적용개시일자\"]));\n\n      // 상한가 변화율 계산 및 해설 붙이기\n      let prevPrice = null;\n      const processed = filtered.map((row, index) => {\n        const currentPrice = Number(row[\"상한가\"]);\n        let rate = \"\";\n        let explanation = \"\";\n        if (prevPrice != null && prevPrice !== 0) {\n          const diff = (currentPrice - prevPrice) / prevPrice * 100;\n          rate = `${diff.toFixed(2)}%`;\n        }\n\n        // 특수 해설 예시\n        if (row[\"적용개시일자\"] === 20120401) {\n          explanation = `2007.01.01 기준 약가 787원 → 53.55% 약가 421원`;\n        }\n        prevPrice = currentPrice;\n        return {\n          ...row,\n          약가변화율: rate,\n          해설: explanation\n        };\n      });\n      setFilteredData(processed);\n    };\n    reader.readAsArrayBuffer(selectedFile);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDC8A \\uC57D\\uAC00 \\uC774\\uB825 \\uC870\\uD68C \\uC2DC\\uC2A4\\uD15C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"1. \\uAE09\\uC5EC\\uC774\\uB825 \\uC5D1\\uC140 \\uD30C\\uC77C \\uC5C5\\uB85C\\uB4DC \\u2192 2. \\uC8FC\\uC131\\uBD84\\uCF54\\uB4DC \\uC785\\uB825 \\u2192 3. \\uACB0\\uACFC \\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\uD30C\\uC77C \\uC120\\uD0DD:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".xlsx, .xls\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC8FC\\uC131\\uBD84\\uCF54\\uB4DC \\uC785\\uB825 (\\uC608: 125002ATB)\",\n        value: ingredientCode,\n        onChange: e => setIngredientCode(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleProcess,\n        children: \"\\uC870\\uD68C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), filteredData.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"5\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.keys(filteredData[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredData.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.values(row).map((val, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: val\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this))\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(DrugPriceHistory, \"3BJRrag/UuKKM6SAhp1rWQKI+zs=\");\n_c = DrugPriceHistory;\nexport default DrugPriceHistory;\nvar _c;\n$RefreshReg$(_c, \"DrugPriceHistory\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","DrugPriceHistory","_s","selectedFile","setSelectedFile","ingredientCode","setIngredientCode","filteredData","setFilteredData","handleFileUpload","e","file","target","files","handleProcess","alert","reader","FileReader","onload","data","Uint8Array","result","workbook","read","type","sheetName","SheetNames","sheet","Sheets","jsonData","utils","sheet_to_json","filtered","filter","row","sort","a","b","Number","prevPrice","processed","map","index","currentPrice","rate","explanation","diff","toFixed","약가변화율","해설","readAsArrayBuffer","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","accept","onChange","placeholder","value","onClick","length","border","cellPadding","Object","keys","key","idx","values","val","i","_c","$RefreshReg$"],"sources":["C:/Users/samsung/marketaccessnow/src/pages/DrugPriceHistory.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nfunction DrugPriceHistory() {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [ingredientCode, setIngredientCode] = useState(\"\");\r\n  const [filteredData, setFilteredData] = useState([]);\r\n\r\n  const handleFileUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  const handleProcess = () => {\r\n    if (!selectedFile || !ingredientCode) {\r\n      alert(\"파일과 주성분코드를 입력해주세요.\");\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const data = new Uint8Array(e.target.result);\r\n      const workbook = XLSX.read(data, { type: \"array\" });\r\n      const sheetName = workbook.SheetNames[0];\r\n      const sheet = workbook.Sheets[sheetName];\r\n      const jsonData = XLSX.utils.sheet_to_json(sheet);\r\n\r\n      // 주성분코드 필터링\r\n      const filtered = jsonData\r\n        .filter((row) => row[\"주성분코드\"] === ingredientCode)\r\n        .sort(\r\n          (a, b) =>\r\n            Number(b[\"적용개시일자\"]) - Number(a[\"적용개시일자\"])\r\n        );\r\n\r\n      // 상한가 변화율 계산 및 해설 붙이기\r\n      let prevPrice = null;\r\n      const processed = filtered.map((row, index) => {\r\n        const currentPrice = Number(row[\"상한가\"]);\r\n        let rate = \"\";\r\n        let explanation = \"\";\r\n\r\n        if (prevPrice != null && prevPrice !== 0) {\r\n          const diff = ((currentPrice - prevPrice) / prevPrice) * 100;\r\n          rate = `${diff.toFixed(2)}%`;\r\n        }\r\n\r\n        // 특수 해설 예시\r\n        if (row[\"적용개시일자\"] === 20120401) {\r\n          explanation = `2007.01.01 기준 약가 787원 → 53.55% 약가 421원`;\r\n        }\r\n\r\n        prevPrice = currentPrice;\r\n\r\n        return {\r\n          ...row,\r\n          약가변화율: rate,\r\n          해설: explanation,\r\n        };\r\n      });\r\n\r\n      setFilteredData(processed);\r\n    };\r\n\r\n    reader.readAsArrayBuffer(selectedFile);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"2rem\" }}>\r\n      <h2>💊 약가 이력 조회 시스템</h2>\r\n      <p>\r\n        1. 급여이력 엑셀 파일 업로드 → 2. 주성분코드 입력 → 3. 결과 확인\r\n      </p>\r\n      <div style={{ marginBottom: \"1rem\" }}>\r\n        <label>\r\n          파일 선택:{\" \"}\r\n          <input type=\"file\" accept=\".xlsx, .xls\" onChange={handleFileUpload} />\r\n        </label>\r\n      </div>\r\n      <div style={{ marginBottom: \"1rem\" }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"주성분코드 입력 (예: 125002ATB)\"\r\n          value={ingredientCode}\r\n          onChange={(e) => setIngredientCode(e.target.value)}\r\n        />\r\n        <button onClick={handleProcess}>조회</button>\r\n      </div>\r\n\r\n      {filteredData.length > 0 && (\r\n        <table border=\"1\" cellPadding=\"5\">\r\n          <thead>\r\n            <tr>\r\n              {Object.keys(filteredData[0]).map((key) => (\r\n                <th key={key}>{key}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredData.map((row, idx) => (\r\n              <tr key={idx}>\r\n                {Object.values(row).map((val, i) => (\r\n                  <td key={i}>{val}</td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrugPriceHistory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}